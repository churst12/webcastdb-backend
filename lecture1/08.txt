by the way when you if you fill out this table and you just do it using loops iteratively it's called dynamic programming but if you do it recursively in other words you have a a two-dimensional array which is static over all recursive calls to this function otherwise you're just passing in a reference to one single table but it still it's still recursive and it still one table then it's called memoization cuz he's funny names for things and computer science in case you ever run up against two different names for the same thing dynamic programming if it's done iteratively using Loops no recursion it's called memoization if you do it recursively okay so here's another problem print out an array in reverse order okay well what could be easier everybody can do that I would think here's an iterative way to do it just take the outermost to elements and swap them and then click in so you take you know your increase one index variable decrease another index variable swap those increase decrease swap those two indices increase decrease swap those two into season you stop when they run into each other or Cross by otherwise you'll be putting it back in the same order if you go back to go all the way all right so that's the simplest iterative way to reverse and rain if your job is to reverse an array God knows why you would want to do that it's not like it's an important programming task okay I'm I'm not really I'm not trying to make a big deal out of the problem but if that was really what you wanted I would say just do it in roof iteratively but again our Point here is to illustrate recursion and how you can do things differently especially manipulating a raise in a fully recursive manner alright so there's a couple of different examples two different ways I'm going to suggest doing this it's called reverse array one it's in one of the example so is a function called reverse a weight of a one and a how does it work the idea is to print out first let me do the Box trace and then we'll look at the code I think it that's helpful to do what what's the idea print out the leftmost and elements Ina in reverse order okay so that's indices 0 2 N -1 and then print the nth element from the left let's do it in the case n equals 4 what array should we reverse here's an array whose values are just 1 2 3 4 and is the length of the array to start with so what do you do so you record on the leftmost and elements I'm not saying this right yeah I don't have this written right should be left most and -1 elements right I understand what I'm trying to say here this is what the function will do how does it do it first you print the left element from the left that's this guy the nth element from the left so first you print for then you recur on the leftmost and -1 elements sorry so this is the Box Trace we start on this array we print that element and we require on a sub array on each and we do the same thing so we print out the rightmost element and then we're occur on what's left do the same thing print out the rightmost element in the current sub array androcur on what's left so there's our Fox Trace and we do the same thing print out the rightmost element and Ricker on everything left what's left is the empty erail Draught that way the array with nothing in it so this is where you recur and this is where the recurrence bottoms out all recursive algorithms have to hit a point where there's no room or there's nothing more to recurrent by the size of the problem has gotten so small it's trivial when you want to reverse an empty array you do nothing and then what are you do you return nothing to do return nothing to do return nothing to do and return nothing to do so by the time you're done the output has been in this order 4 3 2 1 and that was your goal to print out the array in reverse order alright so