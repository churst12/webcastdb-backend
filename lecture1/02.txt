and you can't read that my hands to me okay the reason I want to prove that formula is not because I want to turn this into a math class actually I would like to turn this into a math class but I won't but don't worry they'll be enough math thrown at you the reason I'm doing this is because it's raining in recursive thinking to understand why this formula is true so the definition of cnk is that it's been four K in the range 02 n is the number of K element subsets of an N element set sometimes you do want to Define this for ranges for values of K that are outside this range sort of out of bounds values outside the triangle most people Define it 2-0 outside the triangle so if K happens to be outside this range or if n is negative for him even sometimes that in that situation you want this function to be defined as defined to be zero and all those cases okay so that's the definition here we have a theorem and it's called Pascal's identity and it's because it's the it's the it's the recursive formula that generates Pascal's triangle and it says 4 K in the range not 0 and not in so strictly between we have C&K equals C + -1 K - 1 + C + -1 k okay so the take the two neighboring values one row above add them that gives you the anthro cave con you see why we need to restrict first of all this guarantees that end is not zero so you would you never get a negative value here and you also guarantee for instance that these are unequal was there ever a sequel if it's automatically one and again and -1 can't be negative okay see if K were equal to end here then this would actually be larger than this and that's out of bounds we've eliminated the out of bounds characters instances of the function so how do we prove this how do we think about the problem of counting the number of K element sets of an N element set recursively the whole idea is to take the problem of counting this collection by splitting it into sub problems okay so let SB and an element set and K in the range what X be an element of s so pick any element in this an element set and just started distinguishes set aside set it aside