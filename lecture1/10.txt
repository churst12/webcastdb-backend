okay so here's a reverse array one what does it do it prints out the reversal of the leftmost and elements in a takes as input an indoor a white ants who cares that made it could be anything could be an array of strings array of anything's also takes the parameter n what is n the top-level call and should be the length of the array but since this is going to be recursive I've got to give it this as a argument the size of the array to be recurring on the size of the subarray you're working on that's why that needs to be a parameter if n equals zero you don't do anything if the size of the subarray you're trying to reverse a zero there's nothing to do otherwise if and is bigger than one the first thing you do is print out the nth element from the left and tell him in from the left has index and -1 because our way in to see start at 0 so that's what we do and follow it by a space so that you know and then do a recursive call on the same array but this time in the recursion we're going to reverse one last number of elements the number of valence to be reversed as one smaller print the leftmost and -1 elements reverse so to do this you do these two operations all right so that's a reverse array one yes yes first of all there's one big array and I'll wherever working on is a subarray each of the subarrays is smack against the left side so the only thing in order to specify a separate I have to tell it the right side and I tell the function that by giving the number of elements in the subarray that I'm working on all right so and stands for the number of elements in the subarray that I'm trying to reverse it specifies a specific Subway because it's understood that it's up against the left to the left wall should I give you a give you the array and I'll give you the number and you know the separated work on okay any other questions alright so this is nice I mean it's a little complicated is it I guess they're swapping elements in a loop was most people's liking but this is a recursive solution to the same problem I want to show you this because there's a completely different recursive solution to the very same problem switch the screen thank you